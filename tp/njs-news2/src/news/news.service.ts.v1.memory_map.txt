import { Injectable } from '@nestjs/common';
import { News } from './news.itf';

@Injectable()
export class NewsService {

    private newsMap :Map<string,News> = new Map();
    private nbNews : number = 0; //for auto_incr

    constructor(){
        this.newsMap.set("1",{ id:"1", title:"news_1",text:"il pleut le 20 avril 2024" ,timestamp: "2024-04-20T12:00:00"});
        this.newsMap.set("2",{ id:"2",title:"news_2",text:"il fait beau le 15 mai 2024" ,timestamp: "2024-05-15T12:00:00"});
        this.newsMap.set("3",{ id:"3",title:"news_3",text:"il neige le 25 janvier 2024" ,timestamp: "2024-01-25T12:00:00"});
        this.nbNews=3;
    }

    async findAll():Promise<News[]>{
        return [ ... this.newsMap.values() ]; //iterable to Array
    }

    async findOne(id: string):Promise<News|undefined>{
        return this.newsMap.get(id);
    }

    async create(news: News): Promise<News> {
        let id =  (++this.nbNews).toString();
        news.id=id;
        this.newsMap.set( id, news);
        return news; //with auto_incr id
    }

      async delete(id: string): Promise<boolean>{
        return this.newsMap.delete(id);
      }

      async update(id: string, news: News): Promise<News|undefined> {
        if (!this.newsMap.has(id)) return undefined;
        this.newsMap.set( id, news);
        return news;
      }

}
